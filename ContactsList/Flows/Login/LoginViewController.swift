//
//  LoginViewController.swift
//  ContactsList
//
//  Created by Daniel Yamrak on 03.09.2021.
//

/*
 –ö–æ—Ä–∏—Å—Ç–æ–≤–∞—á –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ø—Ä–æ–≥—Ä–∞–º—É –ø–µ—Ä—à–∏–π —Ä–∞–∑ (—Ç–æ–±—Ç–æ –∫–µ–π—á–µ–Ω –ø—É—Å—Ç–∏–π):
 1. –∑–∞–ø–∏—Ç –Ω–∞ –¥–æ—Å–≤—ñ–ª –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ñ–µ–π—Å/—Ç–∞—á —ñ–¥
 2. –ø–æ–∫–∞–∑—É—î–º–æ —Å–∫—Ä—ñ–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—Ä–æ—Å–µ–º–æ –≤–µ—Å—Ç–∏ –ø–∞—Å–∫–æ–¥(4 —Å–∏–º–≤–æ–ª–∏)
 3. –ø—Ä–æ—Å–∏–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø–∞—Å–∫–æ–¥(4 —Å–∏–º–≤–æ–ª–∏)
 4. –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É –∫–µ–π—á–µ–π–Ω

 –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π –ø–∞—Å–∫–æ–¥:
 –ü—Ä–æ—Å–∏–º–æ  –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é faceid/touch id
 –Ø–∫—â–æ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–∏–π  faceid/touch id, –ø–æ–∫–∞–∑—É—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
 –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–º—ñ–≥ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é  faceid/touch id - –ø–æ–∫–∑–∞—É—î–º–æ —Å–∫—Ä—ñ–Ω –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é.
*/

import UIKit
import LocalAuthentication

class LoginViewController: UIViewController, LoginManagerDelegate {

    @IBOutlet weak var passcodeInfoLabel: UILabel!
    
    @IBOutlet var inputLabel: [UILabel]!
    @IBOutlet weak var digitButton: UIButton!
    @IBOutlet var digits: [UIButton]! {
        didSet {
            let digitFont = UIFont.systemFont(ofSize: 40, weight: .thin)
            digits.forEach { button in
                button.digitButtonStyle()
                let digitValue = String(button.tag)
                button.titleLabel?.font = digitFont
                button.setTitle(digitValue, for: .normal)
            }
        }
    }

    var loginManager = LoginManager() {
        didSet {
            loginManager.delegate = self
        }
    }

    internal var state: VCstate = .loggedout {
        didSet {
            switch state {
            case .loggedin:
                print("‚òÄÔ∏è Loggedin State")
                showHomeVC()
            case .loggedout:
                print("üçÑ Loggedout State")
                loginManager.loginWithFaceID()
            case .showPassCodePrompt:
                print("üê∑ Prompt Passcode")
                promptPasscode()
            case .normal:
                print("üê∂ Normal State")
            }
        }
    }

// MARK: - Lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()

        digitButton.digitButtonStyle()

        let isPasscodeSet = KeychainHelper.isPasscodeSet()
        if !isPasscodeSet {
            state = .showPassCodePrompt
        } else {
            state = .loggedout
        }

    }

// MARK: - Methods

    private func showHomeVC() {
        guard let homeVC = storyboard?.instantiateViewController(identifier: "ContactsViewController") as? ContactsViewController else { return }
        let window = UIApplication.shared.windows.filter({$0.isKeyWindow}).first
        window?.rootViewController = UINavigationController(rootViewController: homeVC)
        window?.makeKeyAndVisible()
    }

    private func promptPasscode() {

    }

}

// MARK: - UIButton Extension

extension UIButton {
    func digitButtonStyle() {
        self.layer.cornerRadius = self.frame.width / 2
        self.backgroundColor = .clear
        self.layer.borderColor = UIColor.systemIndigo.cgColor
        self.layer.borderWidth = 1.5
    }
}
