//
//  ContactsViewController.swift
//  ContactsList
//
//  Created by Daniel Yamrak on 03.09.2021.
//
// MARK: - TASK
/*
 –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–∞–¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —ñ—Å–Ω—É—î –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ñ–ª–æ—É:
 –°—Ç–∞—Ä—Ç—É—î –ø–µ—Ä—à–∏–π —Ä–∞–∑ –ø—Ä–æ–≥—Ä–∞–º–∫–∞:
 1. –ü—Ä–æ—Å–∏–º–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–∞—Å–∫–æ–¥
 2. –ü—Ä–æ—Å–∏–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø–∞—Å–∫–æ–¥
 3. 1 –ø—É–Ω–∫—Ç = 2 –ø—É–Ω–∫—Ç–∏ –∑–∞–ø–∏—Å—É—î–º–æ –ø–∞—Å–∫–æ–¥ —É –∫–µ–π—á–µ–π–Ω.
 4. –ü—Ä–æ—Å–∏–º–æ –¥–æ–∑–≤—ñ–ª –Ω–∞ –±—ñ–æ–º–µ—Ç—Ä–∏–∫—É
 5. –í–∏—Ç—è–≥—É—î–º–æ —É—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –∑ —Ç–µ–ª–µ—Ñ–æ–Ω–æ—ó –∫–Ω–∏–∂–∫–∏
 6. –ó–∞–ø–∏—Å—É—î–º–æ —É—Å—ñ –Ω–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ —É –∫–æ—Ä–¥–∞—Ç—É

 –ê–ø–ª—ñ–∫–µ–π—à–µ–Ω –±—É–≤ —É–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π:
 1. –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç–æ–≤–∞—á–µ–≤—ñ —Å–∫—Ä—ñ–Ω –∑ –ø–∞—Å–∫–æ–¥–æ–º, –ø–æ–≤–µ—Ä—Ö –ø–æ–∫–∞–∑—É—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∑ —Ç–∞—á/—Ñ–µ–π—Å —ñ–¥
 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞ –ø–æ–∫–∞–∑—É—î–º–æ, —É—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏(–∫–æ–Ω—Ç–∞–∫—Ç–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å—Å—è –∑ –∫–æ—Ä–¥–∞—Ç–∏)
 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –±—É–ª–∏ –¥–æ–¥–∞–Ω—ñ –Ω–æ–≤—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ —É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ñ–π –∫–Ω–∏–∂—Ü—ñ, —è–∫—â–æ —Ç–∞–∫ –¥–æ–≥—Ä—É–∂–∞—î–º–æ —ó—Ö —É –∫–æ—Ä–¥–∞—Ç—É.

 ______
 –ü—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –¥–µ—Ç–∞–π–ª –∫–æ–Ω—Ç–∞–∫—Ç—É:
 –°—Ç–æ—Ä—ñ–Ω–∫–∞ –º–∞—î –ø–æ–∫–∞–∑–∞—Ç–∏—Å—å –∑ –Ω–∏–∑—É –¥–æ –≥–æ—Ä–∏.
 —ñ—Å–Ω—É—é—á–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —É—Å—ñ—Ö –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –º–∞—î —ó—Ö–∞—Ç–∏ –¥–æ –≥–æ—Ä–∏, –∞ –∑ –Ω–∏–∑—É –º–∞—î –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏—Å—å —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–µ—Ç–∞–π–ª –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤.
 –ø—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –ø–ª—é—Å–∏–∫ –∫–Ω–æ–ø–æ—á–∫—É, –ø–æ–≤–∏–Ω–Ω–æ –∞–Ω—ñ–º–æ–≤–∞–Ω–æ –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—å 4 –≥—Ä—É–ø–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
 */

import UIKit
import CoreData

class ContactsViewController: UIViewController {
// MARK: - Properties
    private let ContactsCellNibName = "ContactsCollectionViewCell"
    private let ContactsCellIdn = "contactCell"
    let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext

    var contactsList: [Contact] = []

    @IBOutlet private weak var collectionView: UICollectionView? {
        didSet {
            collectionView?.delegate = self
            collectionView?.dataSource = self
        }
    }

// MARK: - LifeCycle
    override func viewDidLoad() {
        super.viewDidLoad()

        print(FileManager.default.urls(for: .documentDirectory, in: .userDomainMask))

        registerCells()
        makeContact()
        loadContacts()
    }

    private func registerCells() {
        collectionView?.register(UINib(nibName: ContactsCellNibName, bundle: nil), forCellWithReuseIdentifier: ContactsCellIdn)
    }

// MARK: - Methods
        func makeContact() {
            let newContact = Contact(context: context)
            newContact.name = "Dan"
            newContact.lastName = "Appleseed"
            newContact.phoneNumber = "380638009070"
            saveContact()
        }

        func saveContact() {
            do {
                try context.save()
                print("SAVED!")
            } catch {
                print("üî• \(error)")
            }
        }

        func loadContacts() {
            let request: NSFetchRequest<Contact> = Contact.fetchRequest()
            do {
                contactsList = try context.fetch(request)
                print("LOADED!")
            } catch {
                print("üî• \(error)")
            }
        }

// MARK: - IBActions
    @IBAction func logoutButtonPressed(_ sender: Any) {
        guard let loginVC = storyboard?.instantiateViewController(identifier: "LoginViewController") as? LoginViewController else { return }
        let window = UIApplication.shared.windows.filter({$0.isKeyWindow}).first
        window?.rootViewController = loginVC
        window?.makeKeyAndVisible()
    }

}


// MARK: - CollectionView Delegate & Data Source

extension ContactsViewController: UICollectionViewDelegate, UICollectionViewDataSource {

    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return contactsList.count
    }

    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        guard let vc = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(identifier: "DetailsViewController") as? DetailsViewController
        else { return }
        vc.contact = contactsList[indexPath.row]
        navigationController?.pushViewController(vc, animated: true)
    }

    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: ContactsCellIdn, for: indexPath) as? ContactsCollectionViewCell else {
            return UICollectionViewCell()
        }
        cell.contactNameLabel.text = contactsList[indexPath.row].name! +
            " " + contactsList[indexPath.row].lastName!
        cell.contactImageView.image = UIImage(systemName: "person.crop.circle") // TODO: Avatar

        return cell
    }
}

